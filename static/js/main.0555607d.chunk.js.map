{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/App.module.css","transitions/slide.module.css","Components/Notification/Notification.module.css","transitions/titleSlide.module.css","transitions/pop.module.css","transitions/notificationSlide.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Notification/Notification.js","Components/App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","existContact","onAddContact","this","className","styles","contactForm","onSubmit","inputLabel","input","type","onChange","placeholder","addButton","Component","ContactListItem","onRemoveContact","item","mr","deleteButton","onClick","ContactList","items","TransitionGroup","component","contactList","map","CSSTransition","key","id","timeout","classNames","slideTransition","Filter","onChangeFilter","label","Notifification","onHideNotification","notification","App","contacts","filter","titleAnimation","changeFilter","addContact","contact","includes","contactToAdd","uuid","removeContact","hideNotification","filteredContacts","toLowerCase","filterContacts","header","in","titleSlide","title","notificationSlide","unmountOnExit","Notification","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0555607d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1ZeIi\",\"inputLabel\":\"ContactForm_inputLabel__oQ7n2\",\"addButton\":\"ContactForm_addButton__386T8\",\"input\":\"ContactForm_input__3WiQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3aSKG\",\"mr\":\"ContactList_mr__3aKxj\",\"deleteButton\":\"ContactList_deleteButton__3l30y\",\"item\":\"ContactList_item__29rWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputLabel\":\"Filter_inputLabel__1a1H7\",\"label\":\"Filter_label__1U-zE\",\"input\":\"Filter_input__2bYCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1FB_N\",\"header\":\"App_header__r3FS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__UfeGx\",\"enterActive\":\"slide_enterActive__41QGS\",\"exit\":\"slide_exit__33Qa6\",\"exitActive\":\"slide_exitActive__VkDAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1tW1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"titleSlide_enter__3BAHR\",\"enterActive\":\"titleSlide_enterActive__wWBn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__137bp\",\"enterActive\":\"pop_enterActive__GHyOS\",\"exit\":\"pop_exit__3jXuc\",\"exitActive\":\"pop_exitActive__1NzYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notificationSlide_enter__2vlJT\",\"enterActive\":\"notificationSlide_enterActive__11TKY\",\"exit\":\"notificationSlide_exit__YR0hn\",\"exitActive\":\"notificationSlide_exitActive__3V4Qb\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.props.existContact) return;\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={styles.inputLabel}>\r\n          <span>Name</span>\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Please enter name\"\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.inputLabel}>\r\n          <span>Number</span>\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"xxx-xx-xx\"\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.addButton}>\r\n          Add contact{' '}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\n\r\n\r\nconst ContactListItem = ({ name, number, onRemoveContact }) => (\r\n  <li className={styles.item}>\r\n    <span className={styles.mr}>{name}:  {number}\r\n    <button className={styles.deleteButton} type=\"button\" onClick={onRemoveContact}>\r\n      Delete\r\n    </button></span>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\nimport styles from './ContactList.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport slideTransition from '../../transitions/slide.module.css';\r\n\r\nconst ContactList = ({ items, onRemoveContact }) => (\r\n  // <ul className={styles.contactList}>\r\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n    {items.map(item => (\r\n      <CSSTransition key={item.id} timeout={250} classNames={slideTransition}>\r\n        <ContactListItem\r\n          {...item}\r\n          onRemoveContact={() => onRemoveContact(item.id)}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n  // </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <label className={styles.inputLabel}>\r\n    <span className={styles.label}>Find contacts by name</span>\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChangeFilter}\r\n      placeholder=\"Enter contact to filter...\"\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css'\r\n\r\nconst Notifification = ({onHideNotification}) => (\r\n<span className={styles.notification} onClick={onHideNotification}>Contact already exists</span>   \r\n\r\n);\r\n\r\nexport default Notifification;","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport uuid from 'react-uuid';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport Notification from './Notification/Notification';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport titleSlide from '../transitions/titleSlide.module.css';\r\nimport styles from './App.module.css';\r\nimport popTransition from '../transitions/pop.module.css';\r\nimport notificationSlide from '../transitions/notificationSlide.module.css';\r\n\r\nconst filterContacts = (filter, contacts) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    filter: PropTypes.string.isRequired,\r\n    titleAnimation: PropTypes.bool.isRequired,\r\n    existContact: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    titleAnimation: false,\r\n    existContact: false,\r\n  };\r\n\r\n  changeFilter = e => {\r\n    if (this.state.existContact) return;\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  addContact = contact => {\r\n    const stateNames = this.state.contacts.map(({ name }) => name);\r\n\r\n    if (stateNames.includes(contact.name)) {\r\n      this.setState({ existContact: true });\r\n      return;\r\n    }\r\n\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: uuid(),\r\n    };\r\n\r\n    this.setState(state => ({\r\n      contacts: [contactToAdd, ...state.contacts],\r\n    }));\r\n  };\r\n\r\n  removeContact = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  hideNotification = () => {\r\n    this.setState({ existContact: false });\r\n  };\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevState.contacts !== this.state.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  //   }\r\n  // }\r\n\r\n  componentDidMount() {\r\n    // const persitedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    // if (persitedContacts) {\r\n    //   this.setState({ contacts: persitedContacts });\r\n    // }\r\n    this.setState({ titleAnimation: true });\r\n  }\r\n\r\n  render() {\r\n    const { contacts, filter, titleAnimation, existContact } = this.state;\r\n    const filteredContacts = filterContacts(filter, contacts);\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.header}>\r\n          <CSSTransition\r\n            in={titleAnimation}\r\n            timeout={500}\r\n            classNames={titleSlide}\r\n          >\r\n            <h2 className={styles.title}>Phonebook</h2>\r\n          </CSSTransition>\r\n\r\n          <CSSTransition\r\n            in={existContact}\r\n            timeout={250}\r\n            classNames={notificationSlide}\r\n            unmountOnExit\r\n          >\r\n            <Notification onHideNotification={this.hideNotification} />\r\n          </CSSTransition>\r\n        </div>\r\n        <ContactForm\r\n          onAddContact={this.addContact}\r\n          existContact={existContact}\r\n        />\r\n\r\n        <CSSTransition\r\n          in={contacts.length > 1}\r\n          timeout={250}\r\n          classNames={popTransition}\r\n          unmountOnExit\r\n        >\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        </CSSTransition>\r\n\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            items={filteredContacts}\r\n            onRemoveContact={this.removeContact}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css'\n\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n\n"],"sourceRoot":""}